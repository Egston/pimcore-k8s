apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pimcore.fullname" . }}-nginx
  labels:
    {{- include "pimcore.labels" . | nindent 4 }}
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;

    {{- if and .Values.nginx.compression.enabled .Values.nginx.compression.brotli.enabled }}

    # Load Brotli modules
    load_module modules/ngx_http_brotli_static_module.so;
    load_module modules/ngx_http_brotli_filter_module.so;
    {{- end }}

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  'origin: $http_origin $remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        {{- if .Values.nginx.compression.enabled }}
        {{- if .Values.nginx.compression.gzip.enabled }}

        # Enable gzip compression
        gzip on;
        gzip_comp_level {{ .Values.nginx.compression.gzip.comp_level }};
        gzip_min_length {{ .Values.nginx.compression.gzip.min_length }};
        gzip_types {{ .Values.nginx.compression.gzip.types }};
        gzip_vary on;
        gzip_proxied any;
        {{- end }}

        {{- if .Values.nginx.compression.brotli.enabled }}

        # Enable Brotli compression
        brotli on;
        brotli_comp_level {{ .Values.nginx.compression.brotli.comp_level }};
        brotli_types {{ .Values.nginx.compression.brotli.types }};
        {{- end }}
        {{- end }}

        include /etc/nginx/conf.d/*.conf;
    }
