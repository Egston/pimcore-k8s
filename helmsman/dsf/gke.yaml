settings:
  kubeContext: "$GKE_KUBE_CONTEXT"
  globalMaxHistory: 5
  globalHooks:
    preInstall: "../hooks/gke-pre-install.sh"
    postInstall: "../hooks/gke-post-install.sh"
    preUpgrade: "../hooks/gke-pre-upgrade.sh"
    postUpgrade: "../hooks/gke-post-upgrade.sh"
    preDelete: "../hooks/gke-pre-delete.sh"
    postDelete: "../hooks/gke-post-delete.sh"

helmRepos:
  bitnami: "https://charts.bitnami.com/bitnami"
  nginx: "https://helm.nginx.com/stable"

namespaces:
  pimcore:
    protected: false

apps:
  mysql:
    namespace: "pimcore"
    enabled: true
    chart: "bitnami/mariadb"
    version: 16.4.0
    valuesFile: "../../charts/mysql/values.yaml"
    priority: -1
    set:
      auth.rootPassword: "$DB_ROOT_PASSWORD"
      auth.password: "$DB_PASSWORD"
      auth.replicationPassword: "$DB_REPLICATION_PASSWORD"
      primary.persistence.enabled: true
      primary.persistence.size: "10Gi"
      # if you want to use custom storageClass, e.g. with Retain policy and expandable
      primary.persistence.storageClass: "pimcore-gke-retained"

  redis:
    namespace: "pimcore"
    enabled: true
    chart: "bitnami/redis"
    version: 18.16.1
    valuesFile: "../../charts/redis/values.yaml"
    priority: -1
    set:
      auth.password: "$REDIS_PASSWORD"

  pimcore:
    namespace: "pimcore"
    enabled: true
    chart: "../../charts/pimcore"
    version: 0.1.0
    valuesFile: "../../charts/pimcore/values.yaml"
    helmFlags:
      # long timeout, because Pimcore installation can take a while
      - "--timeout=20m"
    set:
      # if you change the project type, you may need to change the customConfigFiles
      pimcore.createProject: "pimcore/demo"
      pimcore.appSecret: "$APP_SECRET"
      pimcore.password: "$ADMIN_PASSWORD"
      pimcore.db.password: "$DB_PASSWORD"
      pimcore.redisPassword: "$REDIS_PASSWORD"

      # if you have existing claim, or keep empty to create a new claim
      pvc.data.existingClaim: ""
      pvc.data.subPath: "pimcore"

      # if you want to use custom storageClass, e.g. with Retain policy and expandable;
      # it does need to allow RWX (ReadWriteMany) access
      # pvc.data.storageClass: "filestore-sc" # minimum is 1 TiB
      # pvc.data.storageClass: "standard-rwx" # minimum is 1 Tib
      pvc.data.storage: "2Gi"

      # if you want to use configMaps as Pimcore configfiles;
      # otherwise you need to edit the config files in the created PV
      pimcore.customConfigFiles.config-yaml.enabled: false
      pimcore.customConfigFiles.bundles-php.enabled: false

      # GKE BackendConfig settings
      nginx.backendConfig.enabled: true
      nginx.backendConfig.timeoutSec: 300
      nginx.backendConfig.healthCheck.checkIntervalSec: 30
      nginx.backendConfig.healthCheck.timeoutSec: 30
      nginx.backendConfig.healthCheck.healthyThreshold: 2
      nginx.backendConfig.healthCheck.unhealthyThreshold: 2
      nginx.backendConfig.healthCheck.requestPath: "/admin/login"
